import { c as create_ssr_component, a as add_attribute, v as validate_component } from "../../chunks/ssr.js";
/* empty css               */
import "howler";
const SoundControls = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let volumeLevel = 0.5;
  return `<div class="sound-controls fixed bottom-4 right-4 bg-gray-800 bg-opacity-70 p-2 rounded-lg z-50 flex items-center space-x-2"><button class="text-white hover:text-amber-300 transition-colors"${add_attribute("aria-label", "Mute sound", 0)}>${`<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"></path></svg>`}</button> <input type="range" min="0" max="1" step="0.05" class="w-24 accent-amber-400" aria-label="Volume control"${add_attribute("value", volumeLevel, 0)}></div>`;
});
const css = {
  code: ".app.svelte-1e3sd4r{display:flex;flex-direction:column;min-height:100vh}main.svelte-1e3sd4r{flex:1;display:flex;flex-direction:column;width:100%;margin:0 auto;box-sizing:border-box}.sound-toggle.svelte-1e3sd4r{position:fixed;bottom:20px;right:20px;width:40px;height:40px;border-radius:50%;background-color:rgba(0, 0, 0, 0.7);color:white;border:none;font-size:20px;cursor:pointer;display:flex;align-items:center;justify-content:center;z-index:1001}",
  map: '{"version":3,"file":"+layout.svelte","sources":["+layout.svelte"],"sourcesContent":["<!-- Update your existing +layout.svelte file to include the SoundControls component -->\\n<script lang=\\"ts\\">import \\"../app.postcss\\";\\nimport { onMount } from \\"svelte\\";\\nimport { initSounds } from \\"$lib/sounds\\";\\nimport SoundControls from \\"$lib/components/SoundControls.svelte\\";\\nlet showSoundControls = false;\\nfunction toggleSoundControls() {\\n  showSoundControls = !showSoundControls;\\n}\\nonMount(() => {\\n  initSounds();\\n  const handleKeyDown = (e) => {\\n    if (e.key === \\"m\\" || e.key === \\"M\\") {\\n      toggleSoundControls();\\n    }\\n  };\\n  window.addEventListener(\\"keydown\\", handleKeyDown);\\n  return () => {\\n    window.removeEventListener(\\"keydown\\", handleKeyDown);\\n  };\\n});\\n<\/script>\\n\\n<div class=\\"app\\">\\n  <main>\\n    <slot />\\n  </main>\\n  \\n  <!-- Sound controls toggle button -->\\n  <button \\n    class=\\"sound-toggle\\"\\n    on:click={toggleSoundControls}\\n    title=\\"Sound Settings (Press M)\\"\\n  >\\n    ðŸ”Š\\n  </button>\\n  \\n  <!-- Sound controls panel -->\\n  <SoundControls showControls={showSoundControls} />\\n</div>\\n\\n<style>\\n  .app {\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100vh;\\n  }\\n  \\n  main {\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    width: 100%;\\n    margin: 0 auto;\\n    box-sizing: border-box;\\n  }\\n  \\n  .sound-toggle {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n    width: 40px;\\n    height: 40px;\\n    border-radius: 50%;\\n    background-color: rgba(0, 0, 0, 0.7);\\n    color: white;\\n    border: none;\\n    font-size: 20px;\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1001;\\n  }\\n</style>\\n"],"names":[],"mappings":"AA0CE,mBAAK,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,KACd,CAEA,mBAAK,CACH,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,UACd,CAEA,4BAAc,CACZ,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IACX"}'
};
const Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let showSoundControls = false;
  $$result.css.add(css);
  return `  <div class="app svelte-1e3sd4r"><main class="svelte-1e3sd4r">${slots.default ? slots.default({}) : ``}</main>  <button class="sound-toggle svelte-1e3sd4r" title="Sound Settings (Press M)" data-svelte-h="svelte-53h7y1">ðŸ”Š</button>  ${validate_component(SoundControls, "SoundControls").$$render($$result, { showControls: showSoundControls }, {}, {})} </div>`;
});
export {
  Layout as default
};
